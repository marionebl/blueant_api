Patch a work time destructively, e.g. when releasing it to controlling
---
tags:
  - Time
security:
  - SessionAuth: []
    PersonAuth: []
parameters:
  - name: time_id
    in: path
    type: string
    required: true
  - name: patch
    in: body
    required: true
    schema:
      $ref: "#/definitions/PatchRequest"
definitions:
  PatchRequest:
    type: array
    items:
      $ref: "#/definitions/PatchDocument"
  PatchDocument:
    description: A JSONPatch document as defined by RFC 6902
    example: { "op": "replace", path: "/state", value: 1 }
    required:
      - "op"
      - "path"
      - "value"
    properties:
      op:
        type: string
        description: The operation to be performed
        enum:
          # - "add"
          # - "remove"
          - "replace"
          # - "move"
          # - "copy"
          # - "test"
      path:
        type: string
        description: A JSON-Pointer
      value:
        type: integer
        description: The value to be used within the operations.
      # from:
      #  type: string
      #  description: A string containing a JSON Pointer value.
  Error:
    type: object
    properties:
      error_type:
        type: string
      message:
        type: string
  Time:
    type: object
    properties:
      activityID:
        type: number
        nullable: false
        description:
          id of task from masterData
      activityName:
        type: string
        nullable: true
        description:
          Task description from master data
      billable:
        type: boolean
        nullable: false
        decsription:
          Is this work-time billable?
      break-share:
        type: number
        nullable: true
        description:
          Break in milliseconds
      comment:
        type: string
        nullable: true
        maxLength: 1000
        description:
          comment - maximum length is 100 or 1000 chars depending on customizing
      date:
        format: date
        nullable: false
        description:
          Date of this work time
      duration:
        type: number
        nullable: true
        description:
          Duration of the worktime in milliseconds
      customFieldList:
        type: object
        nullable: true
        properties:
          AbstractCustomField:
            type: array
            items:
              - $ref: '#/definitions/AbstractCustomField'
      exportDate:
        type: date
        nullable: true
        description:
          Export date - not set if not exported
      from:
        type: string
        format: time
        nullable: true
        description:
          Start of work time - only hour and minute are interpreted, timezone and milliseconds are ignored
      iccID:
        type: number
        nullable: true
        description:
          ID of the indirect cost centre
      iccName:
        type: string
        nullable: true
        description:
          Description of the indirect cost centre
      lastChangedDate:
        type: datetime
        nullable: true
        description:
          Last change of this work-time
      personId:
        type: number
        nullable: true
        description:
          ID of the staff who created the work time
      personName:
        type: string
        nullable: true
        description:
          Name of the staff who created the work time
      projectID:
        type: number
        nullable: true
        description:
          id of project - not allowed if ticket is give
      projectName:
        type: string
        nullable: true
        description:
          Description of the project
      reasonNotAccountableID:
        type: integer
        nullable: true
        description:
          Reason because not accountable - only allowed if billable is false
      reasonNotAccountableName:
        type: string
        nullable: true
        description:
          Description of the reason not billable â€“ can only be set when billable == false
      sessionID:
        type: string
        nullable: false
      state:
        type: number
        nullable: false
        # 0 - Open
        # 1 - Confirmed / Released
        # 2 - External system / Locked
        enum: [0, 1, 2]
        description:
          Status of the individual work time
      taskID:
        type: number
        nullable: true
        descrioption:
          Id of activity - not allowed if ticket is given
      taskName:
        type: string
        nullable: true
        description:
          Description of activity from project planning
      to:
        type: string
        format: time
        nullable: true
        description:
          End of work-time - only hour and minute are interpreted, timezone and milliseconds are ignored
      workTimeID:
        type: number
        nullable: true
        description:
          Id of this worktime
      tickedID:
        type: number
        nullable: true
        description:
          Id of ticket
      ticketName:
        type: string
        nullable: true
        description:
          Description of the ticket
responses:
  200:
    description: The patched time
    schema:
      $ref: '#/definitions/Time'
    examples:
      Time: { "activityID": 9982047, "activityName": "Productive", "billable": false, "break-share": 0, "comment": "Some time booking", "date": "2032-03-18", "duration": 14400000, "exportDate": null, "from": "08:00:00+00:00", "iccID": null, "iccName": null, "lastChangedDate": "2032-03-21T11:32:29.668000+01:00", "personID": 70790619, "personName": "Some Person", "projectID": 235971555, "projectName": "Some Project", "reasonNotAccountableID": null, "reasonNotAccountableName": null, "sessionID": "T8CCqsczTTAuVV4fWIOe", "state": 0, "taskID": 235974159, "taskName": "Some Task", "ticketID": null, "ticketName": null, "to": "12:00:00+00:00", "workTimeID": 2638056764 }
  401:
    description: An error indicating a wrong username password comination
    schema:
      $ref: '#/definitions/Error'
    examples:
      Error: { "error_type": "InvalidUsernamePasswordCombinationException",
          "message": "net.proventis.axis.blueant.InvalidUsernamePasswordCombinationException: InvalidUsernamePasswordCombinationException" }
  500:
    description: An generic server error
    schema:
      $ref: '#/definitions/Error'
    examples:
      Error: { "error_type": "Generic",
          "message": "Something went horribly wrong" }
